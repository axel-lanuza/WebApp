//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace AppTracking.TrackingService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.brightmoon.cn/", ConfigurationName="TrackingService.TrackingServiceSoap")]
    public interface TrackingServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.brightmoon.cn/Upload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUpload(System.DateTime time, string id, double latitude, double longitude, System.AsyncCallback callback, object asyncState);
        
        string EndUpload(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.brightmoon.cn/GetPositions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetPositions(string id, System.DateTime start, System.DateTime end, System.AsyncCallback callback, object asyncState);
        
        string EndGetPositions(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TrackingServiceSoapChannel : AppTracking.TrackingService.TrackingServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPositionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPositionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TrackingServiceSoapClient : System.ServiceModel.ClientBase<AppTracking.TrackingService.TrackingServiceSoap>, AppTracking.TrackingService.TrackingServiceSoap {
        
        private BeginOperationDelegate onBeginUploadDelegate;
        
        private EndOperationDelegate onEndUploadDelegate;
        
        private System.Threading.SendOrPostCallback onUploadCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPositionsDelegate;
        
        private EndOperationDelegate onEndGetPositionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPositionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TrackingServiceSoapClient() {
        }
        
        public TrackingServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TrackingServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrackingServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrackingServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<UploadCompletedEventArgs> UploadCompleted;
        
        public event System.EventHandler<GetPositionsCompletedEventArgs> GetPositionsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AppTracking.TrackingService.TrackingServiceSoap.BeginUpload(System.DateTime time, string id, double latitude, double longitude, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpload(time, id, latitude, longitude, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AppTracking.TrackingService.TrackingServiceSoap.EndUpload(System.IAsyncResult result) {
            return base.Channel.EndUpload(result);
        }
        
        private System.IAsyncResult OnBeginUpload(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime time = ((System.DateTime)(inValues[0]));
            string id = ((string)(inValues[1]));
            double latitude = ((double)(inValues[2]));
            double longitude = ((double)(inValues[3]));
            return ((AppTracking.TrackingService.TrackingServiceSoap)(this)).BeginUpload(time, id, latitude, longitude, callback, asyncState);
        }
        
        private object[] OnEndUpload(System.IAsyncResult result) {
            string retVal = ((AppTracking.TrackingService.TrackingServiceSoap)(this)).EndUpload(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadCompleted(object state) {
            if ((this.UploadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadCompleted(this, new UploadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadAsync(System.DateTime time, string id, double latitude, double longitude) {
            this.UploadAsync(time, id, latitude, longitude, null);
        }
        
        public void UploadAsync(System.DateTime time, string id, double latitude, double longitude, object userState) {
            if ((this.onBeginUploadDelegate == null)) {
                this.onBeginUploadDelegate = new BeginOperationDelegate(this.OnBeginUpload);
            }
            if ((this.onEndUploadDelegate == null)) {
                this.onEndUploadDelegate = new EndOperationDelegate(this.OnEndUpload);
            }
            if ((this.onUploadCompletedDelegate == null)) {
                this.onUploadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadCompleted);
            }
            base.InvokeAsync(this.onBeginUploadDelegate, new object[] {
                        time,
                        id,
                        latitude,
                        longitude}, this.onEndUploadDelegate, this.onUploadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AppTracking.TrackingService.TrackingServiceSoap.BeginGetPositions(string id, System.DateTime start, System.DateTime end, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPositions(id, start, end, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AppTracking.TrackingService.TrackingServiceSoap.EndGetPositions(System.IAsyncResult result) {
            return base.Channel.EndGetPositions(result);
        }
        
        private System.IAsyncResult OnBeginGetPositions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            System.DateTime start = ((System.DateTime)(inValues[1]));
            System.DateTime end = ((System.DateTime)(inValues[2]));
            return ((AppTracking.TrackingService.TrackingServiceSoap)(this)).BeginGetPositions(id, start, end, callback, asyncState);
        }
        
        private object[] OnEndGetPositions(System.IAsyncResult result) {
            string retVal = ((AppTracking.TrackingService.TrackingServiceSoap)(this)).EndGetPositions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPositionsCompleted(object state) {
            if ((this.GetPositionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPositionsCompleted(this, new GetPositionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPositionsAsync(string id, System.DateTime start, System.DateTime end) {
            this.GetPositionsAsync(id, start, end, null);
        }
        
        public void GetPositionsAsync(string id, System.DateTime start, System.DateTime end, object userState) {
            if ((this.onBeginGetPositionsDelegate == null)) {
                this.onBeginGetPositionsDelegate = new BeginOperationDelegate(this.OnBeginGetPositions);
            }
            if ((this.onEndGetPositionsDelegate == null)) {
                this.onEndGetPositionsDelegate = new EndOperationDelegate(this.OnEndGetPositions);
            }
            if ((this.onGetPositionsCompletedDelegate == null)) {
                this.onGetPositionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPositionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPositionsDelegate, new object[] {
                        id,
                        start,
                        end}, this.onEndGetPositionsDelegate, this.onGetPositionsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override AppTracking.TrackingService.TrackingServiceSoap CreateChannel() {
            return new TrackingServiceSoapClientChannel(this);
        }
        
        private class TrackingServiceSoapClientChannel : ChannelBase<AppTracking.TrackingService.TrackingServiceSoap>, AppTracking.TrackingService.TrackingServiceSoap {
            
            public TrackingServiceSoapClientChannel(System.ServiceModel.ClientBase<AppTracking.TrackingService.TrackingServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginUpload(System.DateTime time, string id, double latitude, double longitude, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = time;
                _args[1] = id;
                _args[2] = latitude;
                _args[3] = longitude;
                System.IAsyncResult _result = base.BeginInvoke("Upload", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUpload(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Upload", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPositions(string id, System.DateTime start, System.DateTime end, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = id;
                _args[1] = start;
                _args[2] = end;
                System.IAsyncResult _result = base.BeginInvoke("GetPositions", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetPositions(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetPositions", _args, result)));
                return _result;
            }
        }
    }
}
